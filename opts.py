import argparse

def parse_opts():
    parser = argparse.ArgumentParser()
    parser.add_argument('--root_path', default='/root/data/ActivityNet', type=str, help='')
    parser.add_argument('--video_path', default='video_kinetics_jpg', type=str, help='')
    parser.add_argument('--annotation_path', default='kinetics.json', type=str, help='')
    parser.add_argument('--model_path', default='models', type=str, help='')
    parser.add_argument('--premodel_path', default='', type=str, help='')
    parser.add_argument('--result_path', default='results', type=str, help='')
    parser.add_argument('--dataset', default='kinetics', type=str, help='activitynet or kinetics')
    parser.add_argument('--n_classes', default=400, type=int, help='')
    parser.add_argument('--sample_size', default=112, type=int, help='')
    parser.add_argument('--sample_duration', default=16, type=int, help='')
    parser.add_argument('--initial_scale', default=1.0, type=float, help='')
    parser.add_argument('--n_scales', default=5, type=int, help='')
    parser.add_argument('--scale_step', default=0.84089641525, type=float, help='')
    parser.add_argument('--learning_rate', default=0.1, type=float, help='')
    parser.add_argument('--momentum', default=0.9, type=float, help='')
    parser.add_argument('--weight_decay', default=1e-3, type=float, help='')
    parser.add_argument('--nesterov', action='store_true', help='')
    parser.set_defaults(nesterov=False)
    parser.add_argument('--optimizer', default='sgd', type=str, help='')
    parser.add_argument('--batch_size', default=40, type=int, help='')
    parser.add_argument('--n_epochs', default=200, type=int, help='')
    parser.add_argument('--begin_epoch', default=1, type=int, help='')
    parser.add_argument('--n_val_samples', default=3, type=int, help='')
    parser.add_argument('--resume_path', default='', type=str, help='')
    parser.add_argument('--no_train', action='store_true', help='')
    parser.set_defaults(no_train=False)
    parser.add_argument('--no_val', action='store_true', help='')
    parser.set_defaults(no_val=False)
    parser.add_argument('--no_cuda', action='store_true', help='')
    parser.set_defaults(no_cuda=False)
    parser.add_argument('--n_threads', default=4, type=int, help='')
    parser.add_argument('--checkpoint', default=10, type=int, help='')
    parser.add_argument('--crop', default='c', type=str, help='[c]orner or [r]andom')
    parser.add_argument('--no_hflip', action='store_true', help='')
    parser.set_defaults(no_hflip=False)
    parser.add_argument('--norm_value', default=255, type=int, help='')
    parser.add_argument('--model', default='resnet', type=str, help='(resnet | preresnet | densenet)')
    parser.add_argument('--model_depth', default=18, type=int, help='')
    parser.add_argument('--resnet_shortcut', default='B', type=str, help='A or B')
    parser.add_argument('--manual_seed', default=1, type=int, help='')

    args = parser.parse_args()

    return args
